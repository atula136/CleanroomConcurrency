{"Structs/CriticalSection.html#/s:FV20CleanroomConcurrency15CriticalSectioncFT_S0_":{"name":"init()","abstract":"<p>Initializer.</p>","parent_name":"CriticalSection"},"Structs/CriticalSection.html#/s:FV20CleanroomConcurrency15CriticalSection7executeFFT_T_T_":{"name":"execute(_:)","abstract":"<p>Attempts to acquire exclusive access to the critical section before","parent_name":"CriticalSection"},"Structs/CriticalSection.html#/s:FV20CleanroomConcurrency15CriticalSection7executeFT7timeoutSdFT_T__Sb":{"name":"execute(timeout:_:)","abstract":"<p>Attempts to acquire exclusive access to the critical section before","parent_name":"CriticalSection"},"Structs/ThreadLocalValue.html#/s:vV20CleanroomConcurrency16ThreadLocalValue9namespaceGSqSS_":{"name":"namespace","abstract":"<p>If the receiver was instantiated with a <code>namespace</code>, this property","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:vV20CleanroomConcurrency16ThreadLocalValue3keySS":{"name":"key","abstract":"<p>The <code>key</code> that was originally passed to the receiver&rsquo;s constructor.","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:vV20CleanroomConcurrency16ThreadLocalValue7fullKeySS":{"name":"fullKey","abstract":"<p>Contains the key that will be used to access the underlying","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:FV20CleanroomConcurrency16ThreadLocalValuecFT3keySS12instantiatorGSqFGS0_x_GSqx___GS0_x_":{"name":"init(key:instantiator:)","abstract":"<p>Initializes a new instance referencing the thread-local value associated","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:FV20CleanroomConcurrency16ThreadLocalValuecFT9namespaceSS3keySS12instantiatorGSqFGS0_x_GSqx___GS0_x_":{"name":"init(namespace:key:instantiator:)","abstract":"<p>Initializes a new instance referencing the thread-local value associated","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:FV20CleanroomConcurrency16ThreadLocalValue5valueFT_GSqx_":{"name":"value()","abstract":"<p>Retrieves the <code>threadDictionary</code> value currently associated with the","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:FV20CleanroomConcurrency16ThreadLocalValue11cachedValueFT_GSqx_":{"name":"cachedValue()","abstract":"<p>Retrieves the <code>threadDictionary</code> value currently associated with the","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html#/s:FV20CleanroomConcurrency16ThreadLocalValue8setValueFGSqx_T_":{"name":"setValue(_:)","abstract":"<p>Sets a new value in the calling thread&rsquo;s <code>threadDictionary</code> for the key","parent_name":"ThreadLocalValue"},"Structs/ThreadLocalValue.html":{"name":"ThreadLocalValue","abstract":"<p>Provides a mechanism for accessing thread-local values stored in the"},"Structs/CriticalSection.html":{"name":"CriticalSection","abstract":"<p><code>CriticalSection</code>s can be used to ensure exclusive access to a given resource.</p>"},"Protocols/Receipt.html#/s:FP20CleanroomConcurrency7Receipt10deregisterFT_T_":{"name":"deregister()","abstract":"<p>Removes the item represented by this <code>Receipt</code> from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Registry.html\">Registry</a></code>","parent_name":"Receipt"},"Protocols/Lock.html#/s:vP20CleanroomConcurrency4Lock9mechanismOS_13LockMechanism":{"name":"mechanism","abstract":"<p>Describes the underlying locking mechanism used by the receiver.</p>","parent_name":"Lock"},"Protocols/Lock.html#/s:FP20CleanroomConcurrency4Lock4readFFT_T_T_":{"name":"read(_:)","abstract":"<p>Performs the given function with a read lock held.</p>","parent_name":"Lock"},"Protocols/Lock.html#/s:FP20CleanroomConcurrency4Lock5writeFFT_T_T_":{"name":"write(_:)","abstract":"<p>Performs the given function with the write lock held.</p>","parent_name":"Lock"},"Protocols/Lock.html":{"name":"Lock","abstract":"<p>A generic interface describing a lock that can be acquired for reading"},"Protocols/Receipt.html":{"name":"Receipt","abstract":"<p>Represents a specific registrant within a specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Registry.html\">Registry</a></code>.</p>"},"Functions.html#/s:F20CleanroomConcurrency5asyncFFT_T_T_":{"name":"async(_:)","abstract":"<p>Asynchronously executes the passed-in function on a concurrent GCD queue.</p>"},"Functions.html#/s:F20CleanroomConcurrency5asyncFT5delaySdFT_T__T_":{"name":"async(delay:_:)","abstract":"<p>After a specified delay, asynchronously executes the passed-in function on a"},"Functions.html#/s:F20CleanroomConcurrency12asyncBarrierFFT_T_T_":{"name":"asyncBarrier(_:)","abstract":"<p>Asynchronously executes the passed-in function on a concurrent GCD queue,"},"Functions.html#/s:F20CleanroomConcurrency10mainThreadFFT_T_T_":{"name":"mainThread(_:)","abstract":"<p>Asynchronously executes the specified function on the main thread.</p>"},"Functions.html#/s:F20CleanroomConcurrency10mainThreadFT5delaySdFT_T__T_":{"name":"mainThread(delay:_:)","abstract":"<p>Asynchronously executes the specified function on the main thread.</p>"},"Enums/LockMechanism.html#/s:FO20CleanroomConcurrency13LockMechanism4noneFMS0_S0_":{"name":"none","abstract":"<p>A mechanism that peforms no read or write locking. This should only","parent_name":"LockMechanism"},"Enums/LockMechanism.html#/s:FO20CleanroomConcurrency13LockMechanism15criticalSectionFMS0_S0_":{"name":"criticalSection","abstract":"<p>A mechanism that relies on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/CriticalSection.html\">CriticalSection</a></code> for a re-entrant","parent_name":"LockMechanism"},"Enums/LockMechanism.html#/s:FO20CleanroomConcurrency13LockMechanism17readAndAsyncWriteFMS0_S0_":{"name":"readAndAsyncWrite","abstract":"<p>A lock mechanism that relies on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ReadWriteCoordinator.html\">ReadWriteCoordinator</a></code> for a","parent_name":"LockMechanism"},"Enums/LockMechanism.html#/s:FO20CleanroomConcurrency13LockMechanism20readAndBlockingWriteFMS0_S0_":{"name":"readAndBlockingWrite","abstract":"<p>A lock mechanism that relies on a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ReadWriteCoordinator.html\">ReadWriteCoordinator</a></code> for a","parent_name":"LockMechanism"},"Enums/LockMechanism.html#/s:FO20CleanroomConcurrency13LockMechanism10createLockFT_PS_4Lock_":{"name":"createLock()","abstract":"<p>Creates a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Lock.html\">Lock</a></code> instance that uses the locking mechanism specified","parent_name":"LockMechanism"},"Enums/LockMechanism.html":{"name":"LockMechanism","abstract":"<p>Represents different mechanisms that can be used for locking.</p>"},"Classes/ReadWriteCoordinator.html#/s:FC20CleanroomConcurrency20ReadWriteCoordinatorcFT_S0_":{"name":"init()","abstract":"<p>Initializes a new <code>ReadWriteCoordinator</code> instance.</p>","parent_name":"ReadWriteCoordinator"},"Classes/ReadWriteCoordinator.html#/s:FC20CleanroomConcurrency20ReadWriteCoordinatorcFT10queueLabelSS_S0_":{"name":"init(queueLabel:)","abstract":"<p>Initializes a new <code>ReadWriteCoordinator</code> instance.</p>","parent_name":"ReadWriteCoordinator"},"Classes/ReadWriteCoordinator.html#/s:FC20CleanroomConcurrency20ReadWriteCoordinator4readFFT_T_T_":{"name":"read(_:)","abstract":"<p>Attempts to acquire a read lock, blocking if necessary. Once a read","parent_name":"ReadWriteCoordinator"},"Classes/ReadWriteCoordinator.html#/s:FC20CleanroomConcurrency20ReadWriteCoordinator12enqueueWriteFFT_T_T_":{"name":"enqueueWrite(_:)","abstract":"<p>Enqueues an asynchronous request for the write lock and returns to the","parent_name":"ReadWriteCoordinator"},"Classes/ReadWriteCoordinator.html#/s:FC20CleanroomConcurrency20ReadWriteCoordinator13blockingWriteFFT_T_T_":{"name":"blockingWrite(_:)","abstract":"<p>Attempts to acquire the write lock, blocking if necessary. Once the write","parent_name":"ReadWriteCoordinator"},"Classes/Registry.html#/s:vC20CleanroomConcurrency8Registry5countSi":{"name":"count","abstract":"<p>The number of registered items.</p>","parent_name":"Registry"},"Classes/Registry.html#/s:FC20CleanroomConcurrency8RegistrycFT4lockOS_13LockMechanism_GS0_x_":{"name":"init(lock:)","abstract":"<p>Creates a new <code>Registry</code> using the specified <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LockMechanism.html\">LockMechanism</a></code>.</p>","parent_name":"Registry"},"Classes/Registry.html#/s:FC20CleanroomConcurrency8Registry8registerFxPS_7Receipt_":{"name":"register(_:)","abstract":"<p>Adds an item to the registry.</p>","parent_name":"Registry"},"Classes/Registry.html#/s:FC20CleanroomConcurrency8Registry11registrantsFT_GSax_":{"name":"registrants()","abstract":"<p>Returns the items currently in the <code>Registry</code>.</p>","parent_name":"Registry"},"Classes/Registry.html#/s:FC20CleanroomConcurrency8Registry18withEachRegistrantFT7performFxT__T_":{"name":"withEachRegistrant(perform:)","abstract":"<p>Performs the given function once for each registered object.</p>","parent_name":"Registry"},"Classes/LockedResource.html#/s:FC20CleanroomConcurrency14LockedResourcecFT8resourcex4lockOS_13LockMechanism_GS0_x_":{"name":"init(resource:lock:)","abstract":"<p>Initializes a new <code>LockedResource</code> to protect the given resource","parent_name":"LockedResource"},"Classes/LockedResource.html#/s:FC20CleanroomConcurrency14LockedResource4readFFxT_T_":{"name":"read(_:)","abstract":"<p>Performs an operation with the read lock held.</p>","parent_name":"LockedResource"},"Classes/LockedResource.html#/s:FC20CleanroomConcurrency14LockedResource5writeFFRxT_T_":{"name":"write(_:)","abstract":"<p>Performs an operation with the write lock held.</p>","parent_name":"LockedResource"},"Classes/LockedResource.html":{"name":"LockedResource","abstract":"<p>A generic class that protects a resource of type <code>T</code> with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Lock.html\">Lock</a></code>.</p>"},"Classes/Registry.html":{"name":"Registry","abstract":"<p><code>Registry</code> is a generic class designed to keep track of items (of type <code>T</code>)"},"Classes/ReadWriteCoordinator.html":{"name":"ReadWriteCoordinator","abstract":"<p><code>ReadWriteCoordinator</code> instances can be used to coordinate access to a mutable"},"Classes.html":{"name":"Classes","abstract":"The following classes are available globally."},"Enums.html":{"name":"Enums","abstract":"The following enums are available globally."},"Functions.html":{"name":"Functions","abstract":"The following functions are available globally."},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}